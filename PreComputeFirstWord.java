import java.util.*;

public class PreComputeFirstWord {
    private short[] a = new short[0];
    private short[] b = new short[0];
    private short[] c = new short[0];
    private short[] d = new short[0];
    private short[] e = new short[0];
    private short[] f = new short[0];
    private short[] g = new short[0];
    private short[] h = new short[0];
    private short[] i = new short[0];
    private short[] j = new short[0];
    private short[] k = new short[0];
    private short[] l = new short[0];
    private short[] m = new short[0];
    private short[] n = new short[0];
    private short[] o = new short[0];
    private short[] p = new short[0];
    private short[] r = new short[0];
    private short[] s = new short[0];
    private short[] t = new short[0];
    private short[] u = new short[0];
    private short[] v = new short[0];
    private short[] z = new short[0];

    public PreComputeFirstWord(char[][] slovar) {
        for (short ind=0; ind<slovar.length; ind++) {
            char[] beseda = slovar[ind];

            for (char crka: beseda) {
                short[] seznam = vrniSeznamBesedSCrko(crka);
                seznam = dodajBesedoCeNiZe(seznam, ind);
                nastaviSeznamBesedSCrko(crka, seznam);

            }
        }
    }


    public short[] vrniSeznamBesedSCrko(char crka) {
        switch (crka) {
            case 'a' -> {return a;}
            case 'b' -> {return b;}
            case 'c' -> {return c;}
            case 'd' -> {return d;}
            case 'e' -> {return e;}
            case 'f' -> {return f;}
            case 'g' -> {return g;}
            case 'h' -> {return h;}
            case 'i' -> {return i;}
            case 'j' -> {return j;}
            case 'k' -> {return k;}
            case 'l' -> {return l;}
            case 'm' -> {return m;}
            case 'n' -> {return n;}
            case 'o' -> {return o;}
            case 'p' -> {return p;}
            case 'r' -> {return r;}
            case 's' -> {return s;}
            case 't' -> {return t;}
            case 'u' -> {return u;}
            case 'v' -> {return v;}
            case 'z' -> {return z;}
        }

        return null;
    }

    public void nastaviSeznamBesedSCrko(char crka, short[] seznam) {
        switch (crka) {
            case 'a' -> a = seznam;
            case 'b' -> b = seznam;
            case 'c' -> c = seznam;
            case 'd' -> d = seznam;
            case 'e' -> e = seznam;
            case 'f' -> f = seznam;
            case 'g' -> g = seznam;
            case 'h' -> h = seznam;
            case 'i' -> i = seznam;
            case 'j' -> j = seznam;
            case 'k' -> k = seznam;
            case 'l' -> l = seznam;
            case 'm' -> m = seznam;
            case 'n' -> n = seznam;
            case 'o' -> o = seznam;
            case 'p' -> p = seznam;
            case 'r' -> r = seznam;
            case 's' -> s = seznam;
            case 't' -> t = seznam;
            case 'u' -> u = seznam;
            case 'v' -> v = seznam;
            case 'z' -> z = seznam;
        }
    }

    public short[] dodajBesedoCeNiZe(short[] seznam, short indeks) {
        short[] novSeznam = new short[seznam.length + 1];

        for (int i=0; i<seznam.length; i++) {
            if (seznam[i] == indeks) {
                return seznam;
            }

            novSeznam[i] = seznam[i];
        }
        novSeznam[seznam.length] = indeks;

        return novSeznam;
    }

    public int printScore(char[][] slovar, char[] word1, int bestScore) {
        int score = 0;
        for (int i=0; i<slovar.length; i+=100) {
            char[] word2 = slovar[i];
            char[] odziv = izracunajOdziv(word2, word1);

            for (char o: odziv) {
                switch (o) {
                    case 'o' -> score += 2;
                    case '+' -> score += 3;
                    default -> score += 0;
                }
            }
        }

        if (score < bestScore) {
            return bestScore;
        } else {
            bestScore = score;
        }

        System.out.print(new String(word1));
        System.out.println(" -> " + score);

        return bestScore;
    }

    public int printScore2(char[][] slovar, char[] word1, int bestScore) {
        int score = 0;
        for (int i=0; i<slovar.length; i+=10) {
            char[] word2 = slovar[i];
            char[] odziv = izracunajOdziv(word2, word1);
            char[] crkeKiSo = new char[0];

            // koliko besed odstrani?
            int pravilneCounter = 0;
            int dolzinaSeznamOstalihBesed = 15964;
            for (int j=0; j<odziv.length; j++) {
                char o = odziv[j];

                if (o == 'o' || o == '+') {
                    char crkaKiJe = word1[j];
                    crkeKiSo = dodajCrko(crkeKiSo, crkaKiJe);
                    short[] seznamBesedSCrko = vrniSeznamBesedSCrko(crkaKiJe);
                    if (pravilneCounter == 0) {
                        score += (15964 - seznamBesedSCrko.length);
                        dolzinaSeznamOstalihBesed = seznamBesedSCrko.length;
                    } else {
                        // aproximate
                        score += (dolzinaSeznamOstalihBesed / 22) * 6;
                        dolzinaSeznamOstalihBesed = (dolzinaSeznamOstalihBesed / 22) * 6;
                    }
                    pravilneCounter++;

                } else {
                    char crkaKiNi = word1[j];
                    if (index(crkeKiSo, crkaKiNi) != -1) {
                        continue;
                    }

                    short[] seznamBesedSCrkoKiNi = vrniSeznamBesedSCrko(crkaKiNi);
                    score += seznamBesedSCrkoKiNi.length;
                }
            }
        }

        if (score < bestScore) {
            return bestScore;
        } else {
            bestScore = score;
        }

        System.out.print(new String(word1));
        System.out.println(" -> " + score);

        return bestScore;
    }

    public char[] dodajCrko(char[] crke, char crka) {
        char[] newCrke = new char[crke.length + 1];
        for (int i=0; i<crke.length; i++) {
            newCrke[i] = crke[i];
        }

        newCrke[crke.length] = crka;

        return newCrke;
    }

    public short index(char[] beseda, char crka) {
        for (short i=0; i<beseda.length; i++) {
            if (beseda[i] == crka) {
                return i;
            }
        }

        return -1;
    }

    public char[][] vrniMozneOdzive() {
        // Moj Bog, žal mi je, da sem grešil in žalil tebe, ki si moj najboljši Oče. Trdno sklenem, da se bom poboljšal, pomagaj mi s svojo milostjo. Amen.
        return new char[][]{{'-','-','-','-','-','-'},{'-','-','-','-','-','o'},{'-','-','-','-','-','+'},{'-','-','-','-','o','-'},{'-','-','-','-','o','o'},{'-','-','-','-','o','+'},{'-','-','-','-','+','-'},{'-','-','-','-','+','o'},{'-','-','-','-','+','+'},{'-','-','-','o','-','-'},{'-','-','-','o','-','o'},{'-','-','-','o','-','+'},{'-','-','-','o','o','-'},{'-','-','-','o','o','o'},{'-','-','-','o','o','+'},{'-','-','-','o','+','-'},{'-','-','-','o','+','o'},{'-','-','-','o','+','+'},{'-','-','-','+','-','-'},{'-','-','-','+','-','o'},{'-','-','-','+','-','+'},{'-','-','-','+','o','-'},{'-','-','-','+','o','o'},{'-','-','-','+','o','+'},{'-','-','-','+','+','-'},{'-','-','-','+','+','o'},{'-','-','-','+','+','+'},{'-','-','o','-','-','-'},{'-','-','o','-','-','o'},{'-','-','o','-','-','+'},{'-','-','o','-','o','-'},{'-','-','o','-','o','o'},{'-','-','o','-','o','+'},{'-','-','o','-','+','-'},{'-','-','o','-','+','o'},{'-','-','o','-','+','+'},{'-','-','o','o','-','-'},{'-','-','o','o','-','o'},{'-','-','o','o','-','+'},{'-','-','o','o','o','-'},{'-','-','o','o','o','o'},{'-','-','o','o','o','+'},{'-','-','o','o','+','-'},{'-','-','o','o','+','o'},{'-','-','o','o','+','+'},{'-','-','o','+','-','-'},{'-','-','o','+','-','o'},{'-','-','o','+','-','+'},{'-','-','o','+','o','-'},{'-','-','o','+','o','o'},{'-','-','o','+','o','+'},{'-','-','o','+','+','-'},{'-','-','o','+','+','o'},{'-','-','o','+','+','+'},{'-','-','+','-','-','-'},{'-','-','+','-','-','o'},{'-','-','+','-','-','+'},{'-','-','+','-','o','-'},{'-','-','+','-','o','o'},{'-','-','+','-','o','+'},{'-','-','+','-','+','-'},{'-','-','+','-','+','o'},{'-','-','+','-','+','+'},{'-','-','+','o','-','-'},{'-','-','+','o','-','o'},{'-','-','+','o','-','+'},{'-','-','+','o','o','-'},{'-','-','+','o','o','o'},{'-','-','+','o','o','+'},{'-','-','+','o','+','-'},{'-','-','+','o','+','o'},{'-','-','+','o','+','+'},{'-','-','+','+','-','-'},{'-','-','+','+','-','o'},{'-','-','+','+','-','+'},{'-','-','+','+','o','-'},{'-','-','+','+','o','o'},{'-','-','+','+','o','+'},{'-','-','+','+','+','-'},{'-','-','+','+','+','o'},{'-','-','+','+','+','+'},{'-','o','-','-','-','-'},{'-','o','-','-','-','o'},{'-','o','-','-','-','+'},{'-','o','-','-','o','-'},{'-','o','-','-','o','o'},{'-','o','-','-','o','+'},{'-','o','-','-','+','-'},{'-','o','-','-','+','o'},{'-','o','-','-','+','+'},{'-','o','-','o','-','-'},{'-','o','-','o','-','o'},{'-','o','-','o','-','+'},{'-','o','-','o','o','-'},{'-','o','-','o','o','o'},{'-','o','-','o','o','+'},{'-','o','-','o','+','-'},{'-','o','-','o','+','o'},{'-','o','-','o','+','+'},{'-','o','-','+','-','-'},{'-','o','-','+','-','o'},{'-','o','-','+','-','+'},{'-','o','-','+','o','-'},{'-','o','-','+','o','o'},{'-','o','-','+','o','+'},{'-','o','-','+','+','-'},{'-','o','-','+','+','o'},{'-','o','-','+','+','+'},{'-','o','o','-','-','-'},{'-','o','o','-','-','o'},{'-','o','o','-','-','+'},{'-','o','o','-','o','-'},{'-','o','o','-','o','o'},{'-','o','o','-','o','+'},{'-','o','o','-','+','-'},{'-','o','o','-','+','o'},{'-','o','o','-','+','+'},{'-','o','o','o','-','-'},{'-','o','o','o','-','o'},{'-','o','o','o','-','+'},{'-','o','o','o','o','-'},{'-','o','o','o','o','o'},{'-','o','o','o','o','+'},{'-','o','o','o','+','-'},{'-','o','o','o','+','o'},{'-','o','o','o','+','+'},{'-','o','o','+','-','-'},{'-','o','o','+','-','o'},{'-','o','o','+','-','+'},{'-','o','o','+','o','-'},{'-','o','o','+','o','o'},{'-','o','o','+','o','+'},{'-','o','o','+','+','-'},{'-','o','o','+','+','o'},{'-','o','o','+','+','+'},{'-','o','+','-','-','-'},{'-','o','+','-','-','o'},{'-','o','+','-','-','+'},{'-','o','+','-','o','-'},{'-','o','+','-','o','o'},{'-','o','+','-','o','+'},{'-','o','+','-','+','-'},{'-','o','+','-','+','o'},{'-','o','+','-','+','+'},{'-','o','+','o','-','-'},{'-','o','+','o','-','o'},{'-','o','+','o','-','+'},{'-','o','+','o','o','-'},{'-','o','+','o','o','o'},{'-','o','+','o','o','+'},{'-','o','+','o','+','-'},{'-','o','+','o','+','o'},{'-','o','+','o','+','+'},{'-','o','+','+','-','-'},{'-','o','+','+','-','o'},{'-','o','+','+','-','+'},{'-','o','+','+','o','-'},{'-','o','+','+','o','o'},{'-','o','+','+','o','+'},{'-','o','+','+','+','-'},{'-','o','+','+','+','o'},{'-','o','+','+','+','+'},{'-','+','-','-','-','-'},{'-','+','-','-','-','o'},{'-','+','-','-','-','+'},{'-','+','-','-','o','-'},{'-','+','-','-','o','o'},{'-','+','-','-','o','+'},{'-','+','-','-','+','-'},{'-','+','-','-','+','o'},{'-','+','-','-','+','+'},{'-','+','-','o','-','-'},{'-','+','-','o','-','o'},{'-','+','-','o','-','+'},{'-','+','-','o','o','-'},{'-','+','-','o','o','o'},{'-','+','-','o','o','+'},{'-','+','-','o','+','-'},{'-','+','-','o','+','o'},{'-','+','-','o','+','+'},{'-','+','-','+','-','-'},{'-','+','-','+','-','o'},{'-','+','-','+','-','+'},{'-','+','-','+','o','-'},{'-','+','-','+','o','o'},{'-','+','-','+','o','+'},{'-','+','-','+','+','-'},{'-','+','-','+','+','o'},{'-','+','-','+','+','+'},{'-','+','o','-','-','-'},{'-','+','o','-','-','o'},{'-','+','o','-','-','+'},{'-','+','o','-','o','-'},{'-','+','o','-','o','o'},{'-','+','o','-','o','+'},{'-','+','o','-','+','-'},{'-','+','o','-','+','o'},{'-','+','o','-','+','+'},{'-','+','o','o','-','-'},{'-','+','o','o','-','o'},{'-','+','o','o','-','+'},{'-','+','o','o','o','-'},{'-','+','o','o','o','o'},{'-','+','o','o','o','+'},{'-','+','o','o','+','-'},{'-','+','o','o','+','o'},{'-','+','o','o','+','+'},{'-','+','o','+','-','-'},{'-','+','o','+','-','o'},{'-','+','o','+','-','+'},{'-','+','o','+','o','-'},{'-','+','o','+','o','o'},{'-','+','o','+','o','+'},{'-','+','o','+','+','-'},{'-','+','o','+','+','o'},{'-','+','o','+','+','+'},{'-','+','+','-','-','-'},{'-','+','+','-','-','o'},{'-','+','+','-','-','+'},{'-','+','+','-','o','-'},{'-','+','+','-','o','o'},{'-','+','+','-','o','+'},{'-','+','+','-','+','-'},{'-','+','+','-','+','o'},{'-','+','+','-','+','+'},{'-','+','+','o','-','-'},{'-','+','+','o','-','o'},{'-','+','+','o','-','+'},{'-','+','+','o','o','-'},{'-','+','+','o','o','o'},{'-','+','+','o','o','+'},{'-','+','+','o','+','-'},{'-','+','+','o','+','o'},{'-','+','+','o','+','+'},{'-','+','+','+','-','-'},{'-','+','+','+','-','o'},{'-','+','+','+','-','+'},{'-','+','+','+','o','-'},{'-','+','+','+','o','o'},{'-','+','+','+','o','+'},{'-','+','+','+','+','-'},{'-','+','+','+','+','o'},{'-','+','+','+','+','+'},{'o','-','-','-','-','-'},{'o','-','-','-','-','o'},{'o','-','-','-','-','+'},{'o','-','-','-','o','-'},{'o','-','-','-','o','o'},{'o','-','-','-','o','+'},{'o','-','-','-','+','-'},{'o','-','-','-','+','o'},{'o','-','-','-','+','+'},{'o','-','-','o','-','-'},{'o','-','-','o','-','o'},{'o','-','-','o','-','+'},{'o','-','-','o','o','-'},{'o','-','-','o','o','o'},{'o','-','-','o','o','+'},{'o','-','-','o','+','-'},{'o','-','-','o','+','o'},{'o','-','-','o','+','+'},{'o','-','-','+','-','-'},{'o','-','-','+','-','o'},{'o','-','-','+','-','+'},{'o','-','-','+','o','-'},{'o','-','-','+','o','o'},{'o','-','-','+','o','+'},{'o','-','-','+','+','-'},{'o','-','-','+','+','o'},{'o','-','-','+','+','+'},{'o','-','o','-','-','-'},{'o','-','o','-','-','o'},{'o','-','o','-','-','+'},{'o','-','o','-','o','-'},{'o','-','o','-','o','o'},{'o','-','o','-','o','+'},{'o','-','o','-','+','-'},{'o','-','o','-','+','o'},{'o','-','o','-','+','+'},{'o','-','o','o','-','-'},{'o','-','o','o','-','o'},{'o','-','o','o','-','+'},{'o','-','o','o','o','-'},{'o','-','o','o','o','o'},{'o','-','o','o','o','+'},{'o','-','o','o','+','-'},{'o','-','o','o','+','o'},{'o','-','o','o','+','+'},{'o','-','o','+','-','-'},{'o','-','o','+','-','o'},{'o','-','o','+','-','+'},{'o','-','o','+','o','-'},{'o','-','o','+','o','o'},{'o','-','o','+','o','+'},{'o','-','o','+','+','-'},{'o','-','o','+','+','o'},{'o','-','o','+','+','+'},{'o','-','+','-','-','-'},{'o','-','+','-','-','o'},{'o','-','+','-','-','+'},{'o','-','+','-','o','-'},{'o','-','+','-','o','o'},{'o','-','+','-','o','+'},{'o','-','+','-','+','-'},{'o','-','+','-','+','o'},{'o','-','+','-','+','+'},{'o','-','+','o','-','-'},{'o','-','+','o','-','o'},{'o','-','+','o','-','+'},{'o','-','+','o','o','-'},{'o','-','+','o','o','o'},{'o','-','+','o','o','+'},{'o','-','+','o','+','-'},{'o','-','+','o','+','o'},{'o','-','+','o','+','+'},{'o','-','+','+','-','-'},{'o','-','+','+','-','o'},{'o','-','+','+','-','+'},{'o','-','+','+','o','-'},{'o','-','+','+','o','o'},{'o','-','+','+','o','+'},{'o','-','+','+','+','-'},{'o','-','+','+','+','o'},{'o','-','+','+','+','+'},{'o','o','-','-','-','-'},{'o','o','-','-','-','o'},{'o','o','-','-','-','+'},{'o','o','-','-','o','-'},{'o','o','-','-','o','o'},{'o','o','-','-','o','+'},{'o','o','-','-','+','-'},{'o','o','-','-','+','o'},{'o','o','-','-','+','+'},{'o','o','-','o','-','-'},{'o','o','-','o','-','o'},{'o','o','-','o','-','+'},{'o','o','-','o','o','-'},{'o','o','-','o','o','o'},{'o','o','-','o','o','+'},{'o','o','-','o','+','-'},{'o','o','-','o','+','o'},{'o','o','-','o','+','+'},{'o','o','-','+','-','-'},{'o','o','-','+','-','o'},{'o','o','-','+','-','+'},{'o','o','-','+','o','-'},{'o','o','-','+','o','o'},{'o','o','-','+','o','+'},{'o','o','-','+','+','-'},{'o','o','-','+','+','o'},{'o','o','-','+','+','+'},{'o','o','o','-','-','-'},{'o','o','o','-','-','o'},{'o','o','o','-','-','+'},{'o','o','o','-','o','-'},{'o','o','o','-','o','o'},{'o','o','o','-','o','+'},{'o','o','o','-','+','-'},{'o','o','o','-','+','o'},{'o','o','o','-','+','+'},{'o','o','o','o','-','-'},{'o','o','o','o','-','o'},{'o','o','o','o','-','+'},{'o','o','o','o','o','-'},{'o','o','o','o','o','o'},{'o','o','o','o','o','+'},{'o','o','o','o','+','-'},{'o','o','o','o','+','o'},{'o','o','o','o','+','+'},{'o','o','o','+','-','-'},{'o','o','o','+','-','o'},{'o','o','o','+','-','+'},{'o','o','o','+','o','-'},{'o','o','o','+','o','o'},{'o','o','o','+','o','+'},{'o','o','o','+','+','-'},{'o','o','o','+','+','o'},{'o','o','o','+','+','+'},{'o','o','+','-','-','-'},{'o','o','+','-','-','o'},{'o','o','+','-','-','+'},{'o','o','+','-','o','-'},{'o','o','+','-','o','o'},{'o','o','+','-','o','+'},{'o','o','+','-','+','-'},{'o','o','+','-','+','o'},{'o','o','+','-','+','+'},{'o','o','+','o','-','-'},{'o','o','+','o','-','o'},{'o','o','+','o','-','+'},{'o','o','+','o','o','-'},{'o','o','+','o','o','o'},{'o','o','+','o','o','+'},{'o','o','+','o','+','-'},{'o','o','+','o','+','o'},{'o','o','+','o','+','+'},{'o','o','+','+','-','-'},{'o','o','+','+','-','o'},{'o','o','+','+','-','+'},{'o','o','+','+','o','-'},{'o','o','+','+','o','o'},{'o','o','+','+','o','+'},{'o','o','+','+','+','-'},{'o','o','+','+','+','o'},{'o','o','+','+','+','+'},{'o','+','-','-','-','-'},{'o','+','-','-','-','o'},{'o','+','-','-','-','+'},{'o','+','-','-','o','-'},{'o','+','-','-','o','o'},{'o','+','-','-','o','+'},{'o','+','-','-','+','-'},{'o','+','-','-','+','o'},{'o','+','-','-','+','+'},{'o','+','-','o','-','-'},{'o','+','-','o','-','o'},{'o','+','-','o','-','+'},{'o','+','-','o','o','-'},{'o','+','-','o','o','o'},{'o','+','-','o','o','+'},{'o','+','-','o','+','-'},{'o','+','-','o','+','o'},{'o','+','-','o','+','+'},{'o','+','-','+','-','-'},{'o','+','-','+','-','o'},{'o','+','-','+','-','+'},{'o','+','-','+','o','-'},{'o','+','-','+','o','o'},{'o','+','-','+','o','+'},{'o','+','-','+','+','-'},{'o','+','-','+','+','o'},{'o','+','-','+','+','+'},{'o','+','o','-','-','-'},{'o','+','o','-','-','o'},{'o','+','o','-','-','+'},{'o','+','o','-','o','-'},{'o','+','o','-','o','o'},{'o','+','o','-','o','+'},{'o','+','o','-','+','-'},{'o','+','o','-','+','o'},{'o','+','o','-','+','+'},{'o','+','o','o','-','-'},{'o','+','o','o','-','o'},{'o','+','o','o','-','+'},{'o','+','o','o','o','-'},{'o','+','o','o','o','o'},{'o','+','o','o','o','+'},{'o','+','o','o','+','-'},{'o','+','o','o','+','o'},{'o','+','o','o','+','+'},{'o','+','o','+','-','-'},{'o','+','o','+','-','o'},{'o','+','o','+','-','+'},{'o','+','o','+','o','-'},{'o','+','o','+','o','o'},{'o','+','o','+','o','+'},{'o','+','o','+','+','-'},{'o','+','o','+','+','o'},{'o','+','o','+','+','+'},{'o','+','+','-','-','-'},{'o','+','+','-','-','o'},{'o','+','+','-','-','+'},{'o','+','+','-','o','-'},{'o','+','+','-','o','o'},{'o','+','+','-','o','+'},{'o','+','+','-','+','-'},{'o','+','+','-','+','o'},{'o','+','+','-','+','+'},{'o','+','+','o','-','-'},{'o','+','+','o','-','o'},{'o','+','+','o','-','+'},{'o','+','+','o','o','-'},{'o','+','+','o','o','o'},{'o','+','+','o','o','+'},{'o','+','+','o','+','-'},{'o','+','+','o','+','o'},{'o','+','+','o','+','+'},{'o','+','+','+','-','-'},{'o','+','+','+','-','o'},{'o','+','+','+','-','+'},{'o','+','+','+','o','-'},{'o','+','+','+','o','o'},{'o','+','+','+','o','+'},{'o','+','+','+','+','-'},{'o','+','+','+','+','o'},{'o','+','+','+','+','+'},{'+','-','-','-','-','-'},{'+','-','-','-','-','o'},{'+','-','-','-','-','+'},{'+','-','-','-','o','-'},{'+','-','-','-','o','o'},{'+','-','-','-','o','+'},{'+','-','-','-','+','-'},{'+','-','-','-','+','o'},{'+','-','-','-','+','+'},{'+','-','-','o','-','-'},{'+','-','-','o','-','o'},{'+','-','-','o','-','+'},{'+','-','-','o','o','-'},{'+','-','-','o','o','o'},{'+','-','-','o','o','+'},{'+','-','-','o','+','-'},{'+','-','-','o','+','o'},{'+','-','-','o','+','+'},{'+','-','-','+','-','-'},{'+','-','-','+','-','o'},{'+','-','-','+','-','+'},{'+','-','-','+','o','-'},{'+','-','-','+','o','o'},{'+','-','-','+','o','+'},{'+','-','-','+','+','-'},{'+','-','-','+','+','o'},{'+','-','-','+','+','+'},{'+','-','o','-','-','-'},{'+','-','o','-','-','o'},{'+','-','o','-','-','+'},{'+','-','o','-','o','-'},{'+','-','o','-','o','o'},{'+','-','o','-','o','+'},{'+','-','o','-','+','-'},{'+','-','o','-','+','o'},{'+','-','o','-','+','+'},{'+','-','o','o','-','-'},{'+','-','o','o','-','o'},{'+','-','o','o','-','+'},{'+','-','o','o','o','-'},{'+','-','o','o','o','o'},{'+','-','o','o','o','+'},{'+','-','o','o','+','-'},{'+','-','o','o','+','o'},{'+','-','o','o','+','+'},{'+','-','o','+','-','-'},{'+','-','o','+','-','o'},{'+','-','o','+','-','+'},{'+','-','o','+','o','-'},{'+','-','o','+','o','o'},{'+','-','o','+','o','+'},{'+','-','o','+','+','-'},{'+','-','o','+','+','o'},{'+','-','o','+','+','+'},{'+','-','+','-','-','-'},{'+','-','+','-','-','o'},{'+','-','+','-','-','+'},{'+','-','+','-','o','-'},{'+','-','+','-','o','o'},{'+','-','+','-','o','+'},{'+','-','+','-','+','-'},{'+','-','+','-','+','o'},{'+','-','+','-','+','+'},{'+','-','+','o','-','-'},{'+','-','+','o','-','o'},{'+','-','+','o','-','+'},{'+','-','+','o','o','-'},{'+','-','+','o','o','o'},{'+','-','+','o','o','+'},{'+','-','+','o','+','-'},{'+','-','+','o','+','o'},{'+','-','+','o','+','+'},{'+','-','+','+','-','-'},{'+','-','+','+','-','o'},{'+','-','+','+','-','+'},{'+','-','+','+','o','-'},{'+','-','+','+','o','o'},{'+','-','+','+','o','+'},{'+','-','+','+','+','-'},{'+','-','+','+','+','o'},{'+','-','+','+','+','+'},{'+','o','-','-','-','-'},{'+','o','-','-','-','o'},{'+','o','-','-','-','+'},{'+','o','-','-','o','-'},{'+','o','-','-','o','o'},{'+','o','-','-','o','+'},{'+','o','-','-','+','-'},{'+','o','-','-','+','o'},{'+','o','-','-','+','+'},{'+','o','-','o','-','-'},{'+','o','-','o','-','o'},{'+','o','-','o','-','+'},{'+','o','-','o','o','-'},{'+','o','-','o','o','o'},{'+','o','-','o','o','+'},{'+','o','-','o','+','-'},{'+','o','-','o','+','o'},{'+','o','-','o','+','+'},{'+','o','-','+','-','-'},{'+','o','-','+','-','o'},{'+','o','-','+','-','+'},{'+','o','-','+','o','-'},{'+','o','-','+','o','o'},{'+','o','-','+','o','+'},{'+','o','-','+','+','-'},{'+','o','-','+','+','o'},{'+','o','-','+','+','+'},{'+','o','o','-','-','-'},{'+','o','o','-','-','o'},{'+','o','o','-','-','+'},{'+','o','o','-','o','-'},{'+','o','o','-','o','o'},{'+','o','o','-','o','+'},{'+','o','o','-','+','-'},{'+','o','o','-','+','o'},{'+','o','o','-','+','+'},{'+','o','o','o','-','-'},{'+','o','o','o','-','o'},{'+','o','o','o','-','+'},{'+','o','o','o','o','-'},{'+','o','o','o','o','o'},{'+','o','o','o','o','+'},{'+','o','o','o','+','-'},{'+','o','o','o','+','o'},{'+','o','o','o','+','+'},{'+','o','o','+','-','-'},{'+','o','o','+','-','o'},{'+','o','o','+','-','+'},{'+','o','o','+','o','-'},{'+','o','o','+','o','o'},{'+','o','o','+','o','+'},{'+','o','o','+','+','-'},{'+','o','o','+','+','o'},{'+','o','o','+','+','+'},{'+','o','+','-','-','-'},{'+','o','+','-','-','o'},{'+','o','+','-','-','+'},{'+','o','+','-','o','-'},{'+','o','+','-','o','o'},{'+','o','+','-','o','+'},{'+','o','+','-','+','-'},{'+','o','+','-','+','o'},{'+','o','+','-','+','+'},{'+','o','+','o','-','-'},{'+','o','+','o','-','o'},{'+','o','+','o','-','+'},{'+','o','+','o','o','-'},{'+','o','+','o','o','o'},{'+','o','+','o','o','+'},{'+','o','+','o','+','-'},{'+','o','+','o','+','o'},{'+','o','+','o','+','+'},{'+','o','+','+','-','-'},{'+','o','+','+','-','o'},{'+','o','+','+','-','+'},{'+','o','+','+','o','-'},{'+','o','+','+','o','o'},{'+','o','+','+','o','+'},{'+','o','+','+','+','-'},{'+','o','+','+','+','o'},{'+','o','+','+','+','+'},{'+','+','-','-','-','-'},{'+','+','-','-','-','o'},{'+','+','-','-','-','+'},{'+','+','-','-','o','-'},{'+','+','-','-','o','o'},{'+','+','-','-','o','+'},{'+','+','-','-','+','-'},{'+','+','-','-','+','o'},{'+','+','-','-','+','+'},{'+','+','-','o','-','-'},{'+','+','-','o','-','o'},{'+','+','-','o','-','+'},{'+','+','-','o','o','-'},{'+','+','-','o','o','o'},{'+','+','-','o','o','+'},{'+','+','-','o','+','-'},{'+','+','-','o','+','o'},{'+','+','-','o','+','+'},{'+','+','-','+','-','-'},{'+','+','-','+','-','o'},{'+','+','-','+','-','+'},{'+','+','-','+','o','-'},{'+','+','-','+','o','o'},{'+','+','-','+','o','+'},{'+','+','-','+','+','-'},{'+','+','-','+','+','o'},{'+','+','-','+','+','+'},{'+','+','o','-','-','-'},{'+','+','o','-','-','o'},{'+','+','o','-','-','+'},{'+','+','o','-','o','-'},{'+','+','o','-','o','o'},{'+','+','o','-','o','+'},{'+','+','o','-','+','-'},{'+','+','o','-','+','o'},{'+','+','o','-','+','+'},{'+','+','o','o','-','-'},{'+','+','o','o','-','o'},{'+','+','o','o','-','+'},{'+','+','o','o','o','-'},{'+','+','o','o','o','o'},{'+','+','o','o','o','+'},{'+','+','o','o','+','-'},{'+','+','o','o','+','o'},{'+','+','o','o','+','+'},{'+','+','o','+','-','-'},{'+','+','o','+','-','o'},{'+','+','o','+','-','+'},{'+','+','o','+','o','-'},{'+','+','o','+','o','o'},{'+','+','o','+','o','+'},{'+','+','o','+','+','-'},{'+','+','o','+','+','o'},{'+','+','o','+','+','+'},{'+','+','+','-','-','-'},{'+','+','+','-','-','o'},{'+','+','+','-','-','+'},{'+','+','+','-','o','-'},{'+','+','+','-','o','o'},{'+','+','+','-','o','+'},{'+','+','+','-','+','-'},{'+','+','+','-','+','o'},{'+','+','+','-','+','+'},{'+','+','+','o','-','-'},{'+','+','+','o','-','o'},{'+','+','+','o','-','+'},{'+','+','+','o','o','-'},{'+','+','+','o','o','o'},{'+','+','+','o','o','+'},{'+','+','+','o','+','-'},{'+','+','+','o','+','o'},{'+','+','+','o','+','+'},{'+','+','+','+','-','-'},{'+','+','+','+','-','o'},{'+','+','+','+','-','+'},{'+','+','+','+','o','-'},{'+','+','+','+','o','o'},{'+','+','+','+','o','+'},{'+','+','+','+','+','-'},{'+','+','+','+','+','o'},{'+','+','+','+','+','+'}};
    }

    public short izracunajOdzivIndex(char[] pravaPar, char[] izbranaPar) {
        char[] prava = Arrays.copyOf(pravaPar, pravaPar.length);
        char[] izbrana = Arrays.copyOf(izbranaPar, izbranaPar.length);

        // Preverimo <null>, dolžino in sestavo (<izbrana> lahko vsebuje samo
        // male črke slovenske abecede).

        if (6 != izbrana.length) {
            throw new TestSkupno.WordleIzjema(String.format("Metoda <poteza> je vrnila besedo napačne dolžine (%d).", izbrana.length));
        }

        for (int i = 0; i < 6; i++) {
            char znak = izbrana[i];
            if (TestSkupno.ABECEDA.indexOf(znak) < 0) {
                throw new TestSkupno.WordleIzjema(String.format("Metoda <poteza> je vrnila besedo z neveljavnim znakom (%c).", znak));
            }
        }

        short odzivIndeks = 0;

        for (int i = 0; i < 6; i++) {
            if (prava[i] == izbrana[i]) {
                odzivIndeks += (short) (2 * Math.pow(3, 6 - 1 - i));
                prava[i] = '#';
                izbrana[i] = '_';
            }
        }

        // Poiščemo pravilne črke na napačnih mestih.

        for (int ixIzbrana = 0; ixIzbrana < 6; ixIzbrana++) {
            char crka = izbrana[ixIzbrana];
            if (crka != '_') {
                int ixPrava = index(prava, crka);
                if (ixPrava >= 0) {
                    odzivIndeks += (short) (1 * Math.pow(3, 6 - 1 - ixIzbrana));
                    prava[ixPrava] = '#';
                    izbrana[ixIzbrana] = '_';
                }
            }
        }

        return odzivIndeks;
    }

    public char[] izracunajOdziv(char[] pravaPar, char[] izbranaPar) {
        char[] prava = Arrays.copyOf(pravaPar, pravaPar.length);
        char[] izbrana = Arrays.copyOf(izbranaPar, izbranaPar.length);

        if (6 != izbrana.length) {
            throw new TestSkupno.WordleIzjema(String.format("Metoda <poteza> je vrnila besedo napačne dolžine (%d).", izbrana.length));
        }

        for (int i = 0; i < 6; i++) {
            char znak = izbrana[i];
            if (TestSkupno.ABECEDA.indexOf(znak) < 0) {
                throw new TestSkupno.WordleIzjema(String.format("Metoda <poteza> je vrnila besedo z neveljavnim znakom (%c).", znak));
            }
        }

        char[] odziv = "------".toCharArray();

        for (int i = 0; i < 6; i++) {
            if (prava[i] == izbrana[i]) {
                odziv[i] = '+';
                prava[i] = '#';
                izbrana[i] = '_';
            }
        }

        for (int ixIzbrana = 0; ixIzbrana < 6; ixIzbrana++) {
            char crka = izbrana[ixIzbrana];
            if (crka != '_') {
                int ixPrava = index(prava, crka);
                if (ixPrava >= 0) {
                    odziv[ixIzbrana] = 'o';
                    prava[ixPrava] = '#';
                    izbrana[ixIzbrana] = '_';
                }
            }
        }

        return odziv;
    }

    public static char[][] pretvoriBesede(Set<String> besede) {
        /*
        pretvorimo Set<String> v 2D char tabelo zaradi hitrosti
        */

        int stBesed = besede.size();
        char[][] tabelaBesed = new char[stBesed][6];

        short indeks = 0;
        for (String beseda: besede) {
            tabelaBesed[indeks] = beseda.toCharArray();
            indeks++;
        }

        return tabelaBesed;
    }



    public static void main(String[] args) {
        char[][] slovar = pretvoriBesede(TestSkupno.preberiSlovar("slovar.txt"));
        PreComputeFirstWord test = new PreComputeFirstWord(slovar);

        char[] possibleLetters = "abcdefghijklmnoprstuvz".toCharArray();
        char[][] mozniOdzivi = test.vrniMozneOdzive();

        int bestScore = -1;

        for (int l1=0; l1<possibleLetters.length; l1++) {
            char letter1 = possibleLetters[l1];
            System.out.println(letter1);

            for (int l2=0; l2<possibleLetters.length; l2++) {
                char letter2 = possibleLetters[l2];
                if (l1 == l2) continue;

                for (int l3=0; l3<possibleLetters.length; l3++) {
                    char letter3 = possibleLetters[l3];
                    if (l1 == l3 || l2 == l3) continue;

                    for (int l4=0; l4<possibleLetters.length; l4++) {
                        char letter4 = possibleLetters[l4];
                        if (l1 == l4 || l2 == l4 || l3 == l4) continue;

                        for (int l5=0; l5<possibleLetters.length; l5++) {
                            char letter5 = possibleLetters[l5];
                            if (l1 == l5 || l2 == l5 || l3 == l5 || l4 == l5) continue;

                            for (int l6=0; l6<possibleLetters.length; l6++) {
                                char letter6 = possibleLetters[l6];
                                if (l1 == l6 || l2 == l6 || l3 == l6 || l4 == l6 || l5 == l6) continue;

                                char[] word1 = new char[]{letter1, letter2, letter3, letter4, letter5, letter6};

                                bestScore = test.printScore2(slovar, word1, bestScore);
                            }
                        }
                    }
                }
            }
        }

//        for (char[] word1: slovar) {
//            printScore(slovar, word1);
//        }
    }
}
